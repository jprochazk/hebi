name: CI

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linting:
    name: Linting
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: nightly
          components: rustfmt, clippy, miri, rust-src

      - name: Cache
        uses: Swatinem/rust-cache@v2

      - name: Formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Linting
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets --all-features -- -D warnings
  tests:
    name: Tests
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: nightly
          components: rustfmt, clippy, miri, rust-src

      - name: Cache
        uses: Swatinem/rust-cache@v2

      - name: Run tests
        run: cargo test --all-features
  miri:
    name: Miri
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: nightly
          components: rustfmt, clippy, miri, rust-src

      - name: Cache
        uses: Swatinem/rust-cache@v2

      # NOTE: https://github.com/rust-lang/miri/issues/654
      # Miri is *extremely* slow in certain workloads, such as calling `Vec::push` repeatedly.
      # Instead of running all tests under miri, we only run the parts which contain unsafe code.
      - name: Run miri tests
        env:
          MIRIFLAGS: -Zmiri-tree-borrows -Zmiri-permissive-provenance
        run: |
          cargo miri test --no-default-features -F __miri -- value
          cargo miri test --no-default-features -F __miri -- vm

