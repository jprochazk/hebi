---
source: ex/vm3/tests/lex.rs
expression: snapshot
input_file: ex/vm3/tests/parse/input/basic.h2
---
[
    (
        "let",
        Token {
            kind: KwLet,
            span: Span {
                start: 1,
                end: 4,
            },
        },
    ),
    (
        "c",
        Token {
            kind: TokIdent,
            span: Span {
                start: 5,
                end: 6,
            },
        },
    ),
    (
        "let",
        Token {
            kind: KwLet,
            span: Span {
                start: 7,
                end: 10,
            },
        },
    ),
    (
        "b",
        Token {
            kind: TokIdent,
            span: Span {
                start: 11,
                end: 12,
            },
        },
    ),
    (
        "=",
        Token {
            kind: OpEqual,
            span: Span {
                start: 13,
                end: 14,
            },
        },
    ),
    (
        "2",
        Token {
            kind: LitInt,
            span: Span {
                start: 15,
                end: 16,
            },
        },
    ),
    (
        "let",
        Token {
            kind: KwLet,
            span: Span {
                start: 17,
                end: 20,
            },
        },
    ),
    (
        "a",
        Token {
            kind: TokIdent,
            span: Span {
                start: 21,
                end: 22,
            },
        },
    ),
    (
        "=",
        Token {
            kind: OpEqual,
            span: Span {
                start: 23,
                end: 24,
            },
        },
    ),
    (
        "1",
        Token {
            kind: LitInt,
            span: Span {
                start: 25,
                end: 26,
            },
        },
    ),
    (
        "+",
        Token {
            kind: OpPlus,
            span: Span {
                start: 27,
                end: 28,
            },
        },
    ),
    (
        "1",
        Token {
            kind: LitInt,
            span: Span {
                start: 29,
                end: 30,
            },
        },
    ),
    (
        "c",
        Token {
            kind: TokIdent,
            span: Span {
                start: 31,
                end: 32,
            },
        },
    ),
    (
        "=",
        Token {
            kind: OpEqual,
            span: Span {
                start: 33,
                end: 34,
            },
        },
    ),
    (
        "b",
        Token {
            kind: TokIdent,
            span: Span {
                start: 35,
                end: 36,
            },
        },
    ),
    (
        "+",
        Token {
            kind: OpPlus,
            span: Span {
                start: 37,
                end: 38,
            },
        },
    ),
    (
        "a",
        Token {
            kind: TokIdent,
            span: Span {
                start: 39,
                end: 40,
            },
        },
    ),
    (
        "if",
        Token {
            kind: KwIf,
            span: Span {
                start: 42,
                end: 44,
            },
        },
    ),
    (
        "true",
        Token {
            kind: LitBool,
            span: Span {
                start: 45,
                end: 49,
            },
        },
    ),
    (
        "{",
        Token {
            kind: BrkCurlyL,
            span: Span {
                start: 50,
                end: 51,
            },
        },
    ),
    (
        "print",
        Token {
            kind: TokIdent,
            span: Span {
                start: 54,
                end: 59,
            },
        },
    ),
    (
        "(",
        Token {
            kind: BrkParenL,
            span: Span {
                start: 59,
                end: 60,
            },
        },
    ),
    (
        "\"foo\"",
        Token {
            kind: LitString,
            span: Span {
                start: 60,
                end: 65,
            },
        },
    ),
    (
        ")",
        Token {
            kind: BrkParenR,
            span: Span {
                start: 65,
                end: 66,
            },
        },
    ),
    (
        "}",
        Token {
            kind: BrkCurlyR,
            span: Span {
                start: 67,
                end: 68,
            },
        },
    ),
    (
        "else",
        Token {
            kind: KwElse,
            span: Span {
                start: 69,
                end: 73,
            },
        },
    ),
    (
        "{",
        Token {
            kind: BrkCurlyL,
            span: Span {
                start: 74,
                end: 75,
            },
        },
    ),
    (
        "print",
        Token {
            kind: TokIdent,
            span: Span {
                start: 78,
                end: 83,
            },
        },
    ),
    (
        "(",
        Token {
            kind: BrkParenL,
            span: Span {
                start: 83,
                end: 84,
            },
        },
    ),
    (
        "\"bar\"",
        Token {
            kind: LitString,
            span: Span {
                start: 84,
                end: 89,
            },
        },
    ),
    (
        ")",
        Token {
            kind: BrkParenR,
            span: Span {
                start: 89,
                end: 90,
            },
        },
    ),
    (
        "}",
        Token {
            kind: BrkCurlyR,
            span: Span {
                start: 91,
                end: 92,
            },
        },
    ),
    (
        "{",
        Token {
            kind: BrkCurlyL,
            span: Span {
                start: 94,
                end: 95,
            },
        },
    ),
    (
        "print",
        Token {
            kind: TokIdent,
            span: Span {
                start: 98,
                end: 103,
            },
        },
    ),
    (
        "(",
        Token {
            kind: BrkParenL,
            span: Span {
                start: 103,
                end: 104,
            },
        },
    ),
    (
        "\"block\"",
        Token {
            kind: LitString,
            span: Span {
                start: 104,
                end: 111,
            },
        },
    ),
    (
        ")",
        Token {
            kind: BrkParenR,
            span: Span {
                start: 111,
                end: 112,
            },
        },
    ),
    (
        "}",
        Token {
            kind: BrkCurlyR,
            span: Span {
                start: 113,
                end: 114,
            },
        },
    ),
    (
        "let",
        Token {
            kind: KwLet,
            span: Span {
                start: 116,
                end: 119,
            },
        },
    ),
    (
        "d",
        Token {
            kind: TokIdent,
            span: Span {
                start: 120,
                end: 121,
            },
        },
    ),
    (
        "=",
        Token {
            kind: OpEqual,
            span: Span {
                start: 122,
                end: 123,
            },
        },
    ),
    (
        "{",
        Token {
            kind: BrkCurlyL,
            span: Span {
                start: 124,
                end: 125,
            },
        },
    ),
    (
        "print",
        Token {
            kind: TokIdent,
            span: Span {
                start: 128,
                end: 133,
            },
        },
    ),
    (
        "(",
        Token {
            kind: BrkParenL,
            span: Span {
                start: 133,
                end: 134,
            },
        },
    ),
    (
        "\"expression-based grammar\"",
        Token {
            kind: LitString,
            span: Span {
                start: 134,
                end: 160,
            },
        },
    ),
    (
        ")",
        Token {
            kind: BrkParenR,
            span: Span {
                start: 160,
                end: 161,
            },
        },
    ),
    (
        "c",
        Token {
            kind: TokIdent,
            span: Span {
                start: 164,
                end: 165,
            },
        },
    ),
    (
        "}",
        Token {
            kind: BrkCurlyR,
            span: Span {
                start: 166,
                end: 167,
            },
        },
    ),
    (
        "let",
        Token {
            kind: KwLet,
            span: Span {
                start: 169,
                end: 172,
            },
        },
    ),
    (
        "i",
        Token {
            kind: TokIdent,
            span: Span {
                start: 173,
                end: 174,
            },
        },
    ),
    (
        "=",
        Token {
            kind: OpEqual,
            span: Span {
                start: 175,
                end: 176,
            },
        },
    ),
    (
        "0",
        Token {
            kind: LitInt,
            span: Span {
                start: 177,
                end: 178,
            },
        },
    ),
    (
        "loop",
        Token {
            kind: KwLoop,
            span: Span {
                start: 179,
                end: 183,
            },
        },
    ),
    (
        "{",
        Token {
            kind: BrkCurlyL,
            span: Span {
                start: 184,
                end: 185,
            },
        },
    ),
    (
        "if",
        Token {
            kind: KwIf,
            span: Span {
                start: 188,
                end: 190,
            },
        },
    ),
    (
        "i",
        Token {
            kind: TokIdent,
            span: Span {
                start: 191,
                end: 192,
            },
        },
    ),
    (
        ">",
        Token {
            kind: OpMore,
            span: Span {
                start: 193,
                end: 194,
            },
        },
    ),
    (
        "10",
        Token {
            kind: LitInt,
            span: Span {
                start: 195,
                end: 197,
            },
        },
    ),
    (
        "{",
        Token {
            kind: BrkCurlyL,
            span: Span {
                start: 198,
                end: 199,
            },
        },
    ),
    (
        "break",
        Token {
            kind: KwBreak,
            span: Span {
                start: 200,
                end: 205,
            },
        },
    ),
    (
        "}",
        Token {
            kind: BrkCurlyR,
            span: Span {
                start: 206,
                end: 207,
            },
        },
    ),
    (
        "if",
        Token {
            kind: KwIf,
            span: Span {
                start: 210,
                end: 212,
            },
        },
    ),
    (
        "i",
        Token {
            kind: TokIdent,
            span: Span {
                start: 213,
                end: 214,
            },
        },
    ),
    (
        "%",
        Token {
            kind: OpPercent,
            span: Span {
                start: 215,
                end: 216,
            },
        },
    ),
    (
        "2",
        Token {
            kind: LitInt,
            span: Span {
                start: 217,
                end: 218,
            },
        },
    ),
    (
        "==",
        Token {
            kind: OpEqualEqual,
            span: Span {
                start: 219,
                end: 221,
            },
        },
    ),
    (
        "0",
        Token {
            kind: LitInt,
            span: Span {
                start: 222,
                end: 223,
            },
        },
    ),
    (
        "{",
        Token {
            kind: BrkCurlyL,
            span: Span {
                start: 224,
                end: 225,
            },
        },
    ),
    (
        "continue",
        Token {
            kind: KwContinue,
            span: Span {
                start: 226,
                end: 234,
            },
        },
    ),
    (
        "}",
        Token {
            kind: BrkCurlyR,
            span: Span {
                start: 235,
                end: 236,
            },
        },
    ),
    (
        "print",
        Token {
            kind: TokIdent,
            span: Span {
                start: 239,
                end: 244,
            },
        },
    ),
    (
        "(",
        Token {
            kind: BrkParenL,
            span: Span {
                start: 244,
                end: 245,
            },
        },
    ),
    (
        "i",
        Token {
            kind: TokIdent,
            span: Span {
                start: 245,
                end: 246,
            },
        },
    ),
    (
        ")",
        Token {
            kind: BrkParenR,
            span: Span {
                start: 246,
                end: 247,
            },
        },
    ),
    (
        "i",
        Token {
            kind: TokIdent,
            span: Span {
                start: 250,
                end: 251,
            },
        },
    ),
    (
        "+=",
        Token {
            kind: OpPlusEqual,
            span: Span {
                start: 252,
                end: 254,
            },
        },
    ),
    (
        "1",
        Token {
            kind: LitInt,
            span: Span {
                start: 255,
                end: 256,
            },
        },
    ),
    (
        "}",
        Token {
            kind: BrkCurlyR,
            span: Span {
                start: 257,
                end: 258,
            },
        },
    ),
    (
        "fn",
        Token {
            kind: KwFn,
            span: Span {
                start: 260,
                end: 262,
            },
        },
    ),
    (
        "named_bare",
        Token {
            kind: TokIdent,
            span: Span {
                start: 263,
                end: 273,
            },
        },
    ),
    (
        "{",
        Token {
            kind: BrkCurlyL,
            span: Span {
                start: 274,
                end: 275,
            },
        },
    ),
    (
        "print",
        Token {
            kind: TokIdent,
            span: Span {
                start: 278,
                end: 283,
            },
        },
    ),
    (
        "(",
        Token {
            kind: BrkParenL,
            span: Span {
                start: 283,
                end: 284,
            },
        },
    ),
    (
        "\"named_bare\"",
        Token {
            kind: LitString,
            span: Span {
                start: 284,
                end: 296,
            },
        },
    ),
    (
        ")",
        Token {
            kind: BrkParenR,
            span: Span {
                start: 296,
                end: 297,
            },
        },
    ),
    (
        "let",
        Token {
            kind: KwLet,
            span: Span {
                start: 300,
                end: 303,
            },
        },
    ),
    (
        "closure",
        Token {
            kind: TokIdent,
            span: Span {
                start: 304,
                end: 311,
            },
        },
    ),
    (
        "=",
        Token {
            kind: OpEqual,
            span: Span {
                start: 312,
                end: 313,
            },
        },
    ),
    (
        "c",
        Token {
            kind: TokIdent,
            span: Span {
                start: 314,
                end: 315,
            },
        },
    ),
    (
        "closure",
        Token {
            kind: TokIdent,
            span: Span {
                start: 318,
                end: 325,
            },
        },
    ),
    (
        "}",
        Token {
            kind: BrkCurlyR,
            span: Span {
                start: 326,
                end: 327,
            },
        },
    ),
    (
        "fn",
        Token {
            kind: KwFn,
            span: Span {
                start: 329,
                end: 331,
            },
        },
    ),
    (
        "named_args",
        Token {
            kind: TokIdent,
            span: Span {
                start: 332,
                end: 342,
            },
        },
    ),
    (
        "(",
        Token {
            kind: BrkParenL,
            span: Span {
                start: 342,
                end: 343,
            },
        },
    ),
    (
        "n",
        Token {
            kind: TokIdent,
            span: Span {
                start: 343,
                end: 344,
            },
        },
    ),
    (
        ")",
        Token {
            kind: BrkParenR,
            span: Span {
                start: 344,
                end: 345,
            },
        },
    ),
    (
        "{",
        Token {
            kind: BrkCurlyL,
            span: Span {
                start: 346,
                end: 347,
            },
        },
    ),
    (
        "if",
        Token {
            kind: KwIf,
            span: Span {
                start: 350,
                end: 352,
            },
        },
    ),
    (
        "n",
        Token {
            kind: TokIdent,
            span: Span {
                start: 353,
                end: 354,
            },
        },
    ),
    (
        ">",
        Token {
            kind: OpMore,
            span: Span {
                start: 355,
                end: 356,
            },
        },
    ),
    (
        "10",
        Token {
            kind: LitInt,
            span: Span {
                start: 357,
                end: 359,
            },
        },
    ),
    (
        "{",
        Token {
            kind: BrkCurlyL,
            span: Span {
                start: 360,
                end: 361,
            },
        },
    ),
    (
        "print",
        Token {
            kind: TokIdent,
            span: Span {
                start: 362,
                end: 367,
            },
        },
    ),
    (
        "(",
        Token {
            kind: BrkParenL,
            span: Span {
                start: 367,
                end: 368,
            },
        },
    ),
    (
        "\"limit\"",
        Token {
            kind: LitString,
            span: Span {
                start: 368,
                end: 375,
            },
        },
    ),
    (
        ")",
        Token {
            kind: BrkParenR,
            span: Span {
                start: 375,
                end: 376,
            },
        },
    ),
    (
        "}",
        Token {
            kind: BrkCurlyR,
            span: Span {
                start: 377,
                end: 378,
            },
        },
    ),
    (
        "else",
        Token {
            kind: KwElse,
            span: Span {
                start: 381,
                end: 385,
            },
        },
    ),
    (
        "{",
        Token {
            kind: BrkCurlyL,
            span: Span {
                start: 386,
                end: 387,
            },
        },
    ),
    (
        "print",
        Token {
            kind: TokIdent,
            span: Span {
                start: 388,
                end: 393,
            },
        },
    ),
    (
        "(",
        Token {
            kind: BrkParenL,
            span: Span {
                start: 393,
                end: 394,
            },
        },
    ),
    (
        "\"next\"",
        Token {
            kind: LitString,
            span: Span {
                start: 394,
                end: 400,
            },
        },
    ),
    (
        ")",
        Token {
            kind: BrkParenR,
            span: Span {
                start: 400,
                end: 401,
            },
        },
    ),
    (
        "}",
        Token {
            kind: BrkCurlyR,
            span: Span {
                start: 402,
                end: 403,
            },
        },
    ),
    (
        "}",
        Token {
            kind: BrkCurlyR,
            span: Span {
                start: 404,
                end: 405,
            },
        },
    ),
    (
        "let",
        Token {
            kind: KwLet,
            span: Span {
                start: 407,
                end: 410,
            },
        },
    ),
    (
        "anon",
        Token {
            kind: TokIdent,
            span: Span {
                start: 411,
                end: 415,
            },
        },
    ),
    (
        "=",
        Token {
            kind: OpEqual,
            span: Span {
                start: 416,
                end: 417,
            },
        },
    ),
    (
        "fn",
        Token {
            kind: KwFn,
            span: Span {
                start: 418,
                end: 420,
            },
        },
    ),
    (
        "{",
        Token {
            kind: BrkCurlyL,
            span: Span {
                start: 421,
                end: 422,
            },
        },
    ),
    (
        "print",
        Token {
            kind: TokIdent,
            span: Span {
                start: 425,
                end: 430,
            },
        },
    ),
    (
        "(",
        Token {
            kind: BrkParenL,
            span: Span {
                start: 430,
                end: 431,
            },
        },
    ),
    (
        "\"anonymous functions\"",
        Token {
            kind: LitString,
            span: Span {
                start: 431,
                end: 452,
            },
        },
    ),
    (
        ")",
        Token {
            kind: BrkParenR,
            span: Span {
                start: 452,
                end: 453,
            },
        },
    ),
    (
        "}",
        Token {
            kind: BrkCurlyR,
            span: Span {
                start: 454,
                end: 455,
            },
        },
    ),
    (
        "let",
        Token {
            kind: KwLet,
            span: Span {
                start: 457,
                end: 460,
            },
        },
    ),
    (
        "anon_args",
        Token {
            kind: TokIdent,
            span: Span {
                start: 461,
                end: 470,
            },
        },
    ),
    (
        "=",
        Token {
            kind: OpEqual,
            span: Span {
                start: 471,
                end: 472,
            },
        },
    ),
    (
        "fn",
        Token {
            kind: KwFn,
            span: Span {
                start: 473,
                end: 475,
            },
        },
    ),
    (
        "(",
        Token {
            kind: BrkParenL,
            span: Span {
                start: 475,
                end: 476,
            },
        },
    ),
    (
        "n",
        Token {
            kind: TokIdent,
            span: Span {
                start: 476,
                end: 477,
            },
        },
    ),
    (
        ")",
        Token {
            kind: BrkParenR,
            span: Span {
                start: 477,
                end: 478,
            },
        },
    ),
    (
        "{",
        Token {
            kind: BrkCurlyL,
            span: Span {
                start: 479,
                end: 480,
            },
        },
    ),
    (
        "print",
        Token {
            kind: TokIdent,
            span: Span {
                start: 483,
                end: 488,
            },
        },
    ),
    (
        "(",
        Token {
            kind: BrkParenL,
            span: Span {
                start: 488,
                end: 489,
            },
        },
    ),
    (
        "\"anonymous function with args\"",
        Token {
            kind: LitString,
            span: Span {
                start: 489,
                end: 519,
            },
        },
    ),
    (
        ",",
        Token {
            kind: TokComma,
            span: Span {
                start: 519,
                end: 520,
            },
        },
    ),
    (
        "n",
        Token {
            kind: TokIdent,
            span: Span {
                start: 521,
                end: 522,
            },
        },
    ),
    (
        ")",
        Token {
            kind: BrkParenR,
            span: Span {
                start: 522,
                end: 523,
            },
        },
    ),
    (
        "}",
        Token {
            kind: BrkCurlyR,
            span: Span {
                start: 524,
                end: 525,
            },
        },
    ),
    (
        "let",
        Token {
            kind: KwLet,
            span: Span {
                start: 527,
                end: 530,
            },
        },
    ),
    (
        "ternary",
        Token {
            kind: TokIdent,
            span: Span {
                start: 531,
                end: 538,
            },
        },
    ),
    (
        "=",
        Token {
            kind: OpEqual,
            span: Span {
                start: 539,
                end: 540,
            },
        },
    ),
    (
        "if",
        Token {
            kind: KwIf,
            span: Span {
                start: 543,
                end: 545,
            },
        },
    ),
    (
        "true",
        Token {
            kind: LitBool,
            span: Span {
                start: 546,
                end: 550,
            },
        },
    ),
    (
        "{",
        Token {
            kind: BrkCurlyL,
            span: Span {
                start: 551,
                end: 552,
            },
        },
    ),
    (
        "1",
        Token {
            kind: LitInt,
            span: Span {
                start: 553,
                end: 554,
            },
        },
    ),
    (
        "}",
        Token {
            kind: BrkCurlyR,
            span: Span {
                start: 555,
                end: 556,
            },
        },
    ),
    (
        "else",
        Token {
            kind: KwElse,
            span: Span {
                start: 559,
                end: 563,
            },
        },
    ),
    (
        "{",
        Token {
            kind: BrkCurlyL,
            span: Span {
                start: 564,
                end: 565,
            },
        },
    ),
    (
        "0",
        Token {
            kind: LitInt,
            span: Span {
                start: 566,
                end: 567,
            },
        },
    ),
    (
        "}",
        Token {
            kind: BrkCurlyR,
            span: Span {
                start: 568,
                end: 569,
            },
        },
    ),
    (
        "let",
        Token {
            kind: KwLet,
            span: Span {
                start: 571,
                end: 574,
            },
        },
    ),
    (
        "logic",
        Token {
            kind: TokIdent,
            span: Span {
                start: 575,
                end: 580,
            },
        },
    ),
    (
        "=",
        Token {
            kind: OpEqual,
            span: Span {
                start: 581,
                end: 582,
            },
        },
    ),
    (
        "true",
        Token {
            kind: LitBool,
            span: Span {
                start: 585,
                end: 589,
            },
        },
    ),
    (
        "||",
        Token {
            kind: OpPipePipe,
            span: Span {
                start: 590,
                end: 592,
            },
        },
    ),
    (
        "false",
        Token {
            kind: LitBool,
            span: Span {
                start: 593,
                end: 598,
            },
        },
    ),
    (
        "&&",
        Token {
            kind: OpAndAnd,
            span: Span {
                start: 601,
                end: 603,
            },
        },
    ),
    (
        "!",
        Token {
            kind: OpBang,
            span: Span {
                start: 604,
                end: 605,
            },
        },
    ),
    (
        "true",
        Token {
            kind: LitBool,
            span: Span {
                start: 605,
                end: 609,
            },
        },
    ),
    (
        "let",
        Token {
            kind: KwLet,
            span: Span {
                start: 611,
                end: 614,
            },
        },
    ),
    (
        "comparison",
        Token {
            kind: TokIdent,
            span: Span {
                start: 615,
                end: 625,
            },
        },
    ),
    (
        "=",
        Token {
            kind: OpEqual,
            span: Span {
                start: 626,
                end: 627,
            },
        },
    ),
    (
        "c",
        Token {
            kind: TokIdent,
            span: Span {
                start: 630,
                end: 631,
            },
        },
    ),
    (
        ">",
        Token {
            kind: OpMore,
            span: Span {
                start: 632,
                end: 633,
            },
        },
    ),
    (
        "d",
        Token {
            kind: TokIdent,
            span: Span {
                start: 634,
                end: 635,
            },
        },
    ),
    (
        "&&",
        Token {
            kind: OpAndAnd,
            span: Span {
                start: 636,
                end: 638,
            },
        },
    ),
    (
        "d",
        Token {
            kind: TokIdent,
            span: Span {
                start: 639,
                end: 640,
            },
        },
    ),
    (
        "<",
        Token {
            kind: OpLess,
            span: Span {
                start: 641,
                end: 642,
            },
        },
    ),
    (
        "c",
        Token {
            kind: TokIdent,
            span: Span {
                start: 643,
                end: 644,
            },
        },
    ),
    (
        "&&",
        Token {
            kind: OpAndAnd,
            span: Span {
                start: 645,
                end: 647,
            },
        },
    ),
    (
        "a",
        Token {
            kind: TokIdent,
            span: Span {
                start: 648,
                end: 649,
            },
        },
    ),
    (
        ">=",
        Token {
            kind: OpMoreEqual,
            span: Span {
                start: 650,
                end: 652,
            },
        },
    ),
    (
        "c",
        Token {
            kind: TokIdent,
            span: Span {
                start: 653,
                end: 654,
            },
        },
    ),
    (
        "&&",
        Token {
            kind: OpAndAnd,
            span: Span {
                start: 655,
                end: 657,
            },
        },
    ),
    (
        "a",
        Token {
            kind: TokIdent,
            span: Span {
                start: 658,
                end: 659,
            },
        },
    ),
    (
        "<=",
        Token {
            kind: OpLessEqual,
            span: Span {
                start: 660,
                end: 662,
            },
        },
    ),
    (
        "c",
        Token {
            kind: TokIdent,
            span: Span {
                start: 663,
                end: 664,
            },
        },
    ),
    (
        "==",
        Token {
            kind: OpEqualEqual,
            span: Span {
                start: 667,
                end: 669,
            },
        },
    ),
    (
        "true",
        Token {
            kind: LitBool,
            span: Span {
                start: 670,
                end: 674,
            },
        },
    ),
    (
        "!=",
        Token {
            kind: OpBangEqual,
            span: Span {
                start: 675,
                end: 677,
            },
        },
    ),
    (
        "false",
        Token {
            kind: LitBool,
            span: Span {
                start: 678,
                end: 683,
            },
        },
    ),
    (
        "let",
        Token {
            kind: KwLet,
            span: Span {
                start: 685,
                end: 688,
            },
        },
    ),
    (
        "arithmetic",
        Token {
            kind: TokIdent,
            span: Span {
                start: 689,
                end: 699,
            },
        },
    ),
    (
        "=",
        Token {
            kind: OpEqual,
            span: Span {
                start: 700,
                end: 701,
            },
        },
    ),
    (
        "-",
        Token {
            kind: OpMinus,
            span: Span {
                start: 704,
                end: 705,
            },
        },
    ),
    (
        "c",
        Token {
            kind: TokIdent,
            span: Span {
                start: 705,
                end: 706,
            },
        },
    ),
    (
        "+",
        Token {
            kind: OpPlus,
            span: Span {
                start: 707,
                end: 708,
            },
        },
    ),
    (
        "d",
        Token {
            kind: TokIdent,
            span: Span {
                start: 709,
                end: 710,
            },
        },
    ),
    (
        "-",
        Token {
            kind: OpMinus,
            span: Span {
                start: 711,
                end: 712,
            },
        },
    ),
    (
        "a",
        Token {
            kind: TokIdent,
            span: Span {
                start: 713,
                end: 714,
            },
        },
    ),
    (
        "*",
        Token {
            kind: OpStar,
            span: Span {
                start: 715,
                end: 716,
            },
        },
    ),
    (
        "0",
        Token {
            kind: LitInt,
            span: Span {
                start: 717,
                end: 718,
            },
        },
    ),
    (
        "/",
        Token {
            kind: OpSlash,
            span: Span {
                start: 719,
                end: 720,
            },
        },
    ),
    (
        "1",
        Token {
            kind: LitInt,
            span: Span {
                start: 721,
                end: 722,
            },
        },
    ),
    (
        "%",
        Token {
            kind: OpPercent,
            span: Span {
                start: 723,
                end: 724,
            },
        },
    ),
    (
        "2",
        Token {
            kind: LitInt,
            span: Span {
                start: 725,
                end: 726,
            },
        },
    ),
    (
        "**",
        Token {
            kind: OpStarStar,
            span: Span {
                start: 727,
                end: 729,
            },
        },
    ),
    (
        "2",
        Token {
            kind: LitInt,
            span: Span {
                start: 730,
                end: 731,
            },
        },
    ),
    (
        "fn",
        Token {
            kind: KwFn,
            span: Span {
                start: 733,
                end: 735,
            },
        },
    ),
    (
        "make_record",
        Token {
            kind: TokIdent,
            span: Span {
                start: 736,
                end: 747,
            },
        },
    ),
    (
        "{",
        Token {
            kind: BrkCurlyL,
            span: Span {
                start: 748,
                end: 749,
            },
        },
    ),
    (
        "#{",
        Token {
            kind: LitRecord,
            span: Span {
                start: 752,
                end: 754,
            },
        },
    ),
    (
        "list",
        Token {
            kind: TokIdent,
            span: Span {
                start: 759,
                end: 763,
            },
        },
    ),
    (
        ":",
        Token {
            kind: TokColon,
            span: Span {
                start: 763,
                end: 764,
            },
        },
    ),
    (
        "#[",
        Token {
            kind: LitList,
            span: Span {
                start: 765,
                end: 767,
            },
        },
    ),
    (
        "0",
        Token {
            kind: LitInt,
            span: Span {
                start: 774,
                end: 775,
            },
        },
    ),
    (
        ",",
        Token {
            kind: TokComma,
            span: Span {
                start: 775,
                end: 776,
            },
        },
    ),
    (
        "1.0",
        Token {
            kind: LitFloat,
            span: Span {
                start: 783,
                end: 786,
            },
        },
    ),
    (
        ",",
        Token {
            kind: TokComma,
            span: Span {
                start: 786,
                end: 787,
            },
        },
    ),
    (
        "true",
        Token {
            kind: LitBool,
            span: Span {
                start: 794,
                end: 798,
            },
        },
    ),
    (
        ",",
        Token {
            kind: TokComma,
            span: Span {
                start: 798,
                end: 799,
            },
        },
    ),
    (
        "false",
        Token {
            kind: LitBool,
            span: Span {
                start: 806,
                end: 811,
            },
        },
    ),
    (
        ",",
        Token {
            kind: TokComma,
            span: Span {
                start: 811,
                end: 812,
            },
        },
    ),
    (
        "nil",
        Token {
            kind: LitNil,
            span: Span {
                start: 819,
                end: 822,
            },
        },
    ),
    (
        ",",
        Token {
            kind: TokComma,
            span: Span {
                start: 822,
                end: 823,
            },
        },
    ),
    (
        "\"str\"",
        Token {
            kind: LitString,
            span: Span {
                start: 830,
                end: 835,
            },
        },
    ),
    (
        ",",
        Token {
            kind: TokComma,
            span: Span {
                start: 835,
                end: 836,
            },
        },
    ),
    (
        "#(",
        Token {
            kind: LitTuple,
            span: Span {
                start: 843,
                end: 845,
            },
        },
    ),
    (
        "0",
        Token {
            kind: LitInt,
            span: Span {
                start: 854,
                end: 855,
            },
        },
    ),
    (
        ",",
        Token {
            kind: TokComma,
            span: Span {
                start: 855,
                end: 856,
            },
        },
    ),
    (
        "1.0",
        Token {
            kind: LitFloat,
            span: Span {
                start: 865,
                end: 868,
            },
        },
    ),
    (
        ",",
        Token {
            kind: TokComma,
            span: Span {
                start: 868,
                end: 869,
            },
        },
    ),
    (
        "true",
        Token {
            kind: LitBool,
            span: Span {
                start: 878,
                end: 882,
            },
        },
    ),
    (
        ",",
        Token {
            kind: TokComma,
            span: Span {
                start: 882,
                end: 883,
            },
        },
    ),
    (
        "false",
        Token {
            kind: LitBool,
            span: Span {
                start: 892,
                end: 897,
            },
        },
    ),
    (
        ",",
        Token {
            kind: TokComma,
            span: Span {
                start: 897,
                end: 898,
            },
        },
    ),
    (
        "nil",
        Token {
            kind: LitNil,
            span: Span {
                start: 907,
                end: 910,
            },
        },
    ),
    (
        ",",
        Token {
            kind: TokComma,
            span: Span {
                start: 910,
                end: 911,
            },
        },
    ),
    (
        "\"str\"",
        Token {
            kind: LitString,
            span: Span {
                start: 920,
                end: 925,
            },
        },
    ),
    (
        ")",
        Token {
            kind: BrkParenR,
            span: Span {
                start: 932,
                end: 933,
            },
        },
    ),
    (
        ",",
        Token {
            kind: TokComma,
            span: Span {
                start: 933,
                end: 934,
            },
        },
    ),
    (
        "]",
        Token {
            kind: BrkSquareR,
            span: Span {
                start: 939,
                end: 940,
            },
        },
    ),
    (
        ",",
        Token {
            kind: TokComma,
            span: Span {
                start: 940,
                end: 941,
            },
        },
    ),
    (
        "}",
        Token {
            kind: BrkCurlyR,
            span: Span {
                start: 944,
                end: 945,
            },
        },
    ),
    (
        "}",
        Token {
            kind: BrkCurlyR,
            span: Span {
                start: 946,
                end: 947,
            },
        },
    ),
    (
        "let",
        Token {
            kind: KwLet,
            span: Span {
                start: 949,
                end: 952,
            },
        },
    ),
    (
        "postfix",
        Token {
            kind: TokIdent,
            span: Span {
                start: 953,
                end: 960,
            },
        },
    ),
    (
        "=",
        Token {
            kind: OpEqual,
            span: Span {
                start: 961,
                end: 962,
            },
        },
    ),
    (
        "make_record",
        Token {
            kind: TokIdent,
            span: Span {
                start: 965,
                end: 976,
            },
        },
    ),
    (
        "(",
        Token {
            kind: BrkParenL,
            span: Span {
                start: 976,
                end: 977,
            },
        },
    ),
    (
        ")",
        Token {
            kind: BrkParenR,
            span: Span {
                start: 977,
                end: 978,
            },
        },
    ),
    (
        ".",
        Token {
            kind: OpDot,
            span: Span {
                start: 978,
                end: 979,
            },
        },
    ),
    (
        "list",
        Token {
            kind: TokIdent,
            span: Span {
                start: 979,
                end: 983,
            },
        },
    ),
    (
        "[",
        Token {
            kind: BrkSquareL,
            span: Span {
                start: 983,
                end: 984,
            },
        },
    ),
    (
        "6",
        Token {
            kind: LitInt,
            span: Span {
                start: 984,
                end: 985,
            },
        },
    ),
    (
        "]",
        Token {
            kind: BrkSquareR,
            span: Span {
                start: 985,
                end: 986,
            },
        },
    ),
    (
        "make_record",
        Token {
            kind: TokIdent,
            span: Span {
                start: 988,
                end: 999,
            },
        },
    ),
    (
        "(",
        Token {
            kind: BrkParenL,
            span: Span {
                start: 999,
                end: 1000,
            },
        },
    ),
    (
        ")",
        Token {
            kind: BrkParenR,
            span: Span {
                start: 1000,
                end: 1001,
            },
        },
    ),
    (
        ".",
        Token {
            kind: OpDot,
            span: Span {
                start: 1001,
                end: 1002,
            },
        },
    ),
    (
        "list",
        Token {
            kind: TokIdent,
            span: Span {
                start: 1002,
                end: 1006,
            },
        },
    ),
    (
        "[",
        Token {
            kind: BrkSquareL,
            span: Span {
                start: 1006,
                end: 1007,
            },
        },
    ),
    (
        "6",
        Token {
            kind: LitInt,
            span: Span {
                start: 1007,
                end: 1008,
            },
        },
    ),
    (
        "]",
        Token {
            kind: BrkSquareR,
            span: Span {
                start: 1008,
                end: 1009,
            },
        },
    ),
    (
        "=",
        Token {
            kind: OpEqual,
            span: Span {
                start: 1010,
                end: 1011,
            },
        },
    ),
    (
        "#(",
        Token {
            kind: LitTuple,
            span: Span {
                start: 1012,
                end: 1014,
            },
        },
    ),
    (
        "\"empty\"",
        Token {
            kind: LitString,
            span: Span {
                start: 1014,
                end: 1021,
            },
        },
    ),
    (
        ")",
        Token {
            kind: BrkParenR,
            span: Span {
                start: 1021,
                end: 1022,
            },
        },
    ),
]
