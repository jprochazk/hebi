---
source: src/vm/tests.rs
expression: snapshot
---
# Source:
class T: pass
class U(T):
  fn test_0(self): pass
  fn test_1(self): pass
U


# Result:
Ok(
    Object(
        ClassType {
            name: "U",
            init: None,
            fields: {},
            methods: {
                "test_0": Function {
                    descriptor: FunctionDescriptor {
                        name: "test_0",
                        params: Params {
                            has_self: true,
                            min: 0,
                            max: 0,
                        },
                        upvalues: RefCell {
                            value: [],
                        },
                        frame_size: 1,
                        instructions: 2,
                        constants: 0,
                    },
                    upvalues: [],
                    module_id: ModuleId(
                        None,
                    ),
                },
                "test_1": Function {
                    descriptor: FunctionDescriptor {
                        name: "test_1",
                        params: Params {
                            has_self: true,
                            min: 0,
                            max: 0,
                        },
                        upvalues: RefCell {
                            value: [],
                        },
                        frame_size: 1,
                        instructions: 2,
                        constants: 0,
                    },
                    upvalues: [],
                    module_id: ModuleId(
                        None,
                    ),
                },
            },
            parent: Some(
                ClassType {
                    name: "T",
                    init: None,
                    fields: {},
                    methods: {},
                    parent: None,
                },
            ),
        },
    ),
)
