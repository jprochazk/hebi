---
source: src/vm/tests.rs
expression: snapshot
---
# Source:
class T:
  fn test(self):
    pass
T().test


# Result:
Ok(
    Object(
        ClassMethod {
            this: ClassInstance {
                name: "T",
                fields: {
                    "test": Object(
                        Function {
                            descriptor: FunctionDescriptor {
                                name: "test",
                                params: Params {
                                    has_self: true,
                                    min: 0,
                                    max: 0,
                                },
                                upvalues: RefCell {
                                    value: [],
                                },
                                frame_size: 1,
                                instructions: 2,
                                constants: 0,
                            },
                            upvalues: [],
                            module_id: ModuleId(
                                None,
                            ),
                        },
                    ),
                },
                parent: None,
                is_frozen: Cell {
                    value: true,
                },
            },
            function: Function {
                descriptor: FunctionDescriptor {
                    name: "test",
                    params: Params {
                        has_self: true,
                        min: 0,
                        max: 0,
                    },
                    upvalues: RefCell {
                        value: [],
                    },
                    frame_size: 1,
                    instructions: 2,
                    constants: 0,
                },
                upvalues: [],
                module_id: ModuleId(
                    None,
                ),
            },
        },
    ),
)
